\BOOKMARK [0][-]{chapter.1}{Scalable Algorithm Design}{}% 1
\BOOKMARK [1][-]{section.1.1}{Introduction}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Key Principles}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.3}{The Programming Model}{chapter.1}% 4
\BOOKMARK [2][-]{subsection.1.3.1}{Functional programming roots: Map and Fold}{section.1.3}% 5
\BOOKMARK [2][-]{subsection.1.3.2}{Hadoop MapReduce}{section.1.3}% 6
\BOOKMARK [2][-]{subsection.1.3.3}{Example: word counter}{section.1.3}% 7
\BOOKMARK [2][-]{subsection.1.3.4}{Combiners}{section.1.3}% 8
\BOOKMARK [2][-]{subsection.1.3.5}{Example: computing the mean}{section.1.3}% 9
\BOOKMARK [1][-]{section.1.4}{Basic Design Patterns}{chapter.1}% 10
\BOOKMARK [2][-]{subsection.1.4.1}{Algorithm design}{section.1.4}% 11
\BOOKMARK [2][-]{subsection.1.4.2}{Local aggregation: In-Memory combiners}{section.1.4}% 12
\BOOKMARK [2][-]{subsection.1.4.3}{Pairs and stripes}{section.1.4}% 13
\BOOKMARK [2][-]{subsection.1.4.4}{Order inversion}{section.1.4}% 14
\BOOKMARK [0][-]{chapter.2}{Hadoop Internals}{}% 15
\BOOKMARK [1][-]{section.2.1}{Hadoop Distributed File System}{chapter.2}% 16
\BOOKMARK [2][-]{subsection.2.1.1}{Motivations}{section.2.1}% 17
\BOOKMARK [2][-]{subsection.2.1.2}{Blocks}{section.2.1}% 18
\BOOKMARK [2][-]{subsection.2.1.3}{Architecture}{section.2.1}% 19
\BOOKMARK [1][-]{section.2.2}{Hadhoop MapReduce}{chapter.2}% 20
\BOOKMARK [2][-]{subsection.2.2.1}{Anatomy of a job run}{section.2.2}% 21
\BOOKMARK [2][-]{subsection.2.2.2}{Scheduling}{section.2.2}% 22
\BOOKMARK [2][-]{subsection.2.2.3}{Handling failures}{section.2.2}% 23
\BOOKMARK [2][-]{subsection.2.2.4}{Shuffle and sort: Map side}{section.2.2}% 24
\BOOKMARK [2][-]{subsection.2.2.5}{Shuffle and sort: Reduce side}{section.2.2}% 25
\BOOKMARK [0][-]{chapter.3}{Apache Spark Internals}{}% 26
\BOOKMARK [1][-]{section.3.1}{Introduction and Motivations}{chapter.3}% 27
\BOOKMARK [1][-]{section.3.2}{Anatomy of a Spark Application}{chapter.3}% 28
\BOOKMARK [1][-]{section.3.3}{Spark Deployments}{chapter.3}% 29
\BOOKMARK [2][-]{subsection.3.3.1}{Benefits of the Spark architecture}{section.3.3}% 30
\BOOKMARK [1][-]{section.3.4}{Resilient Distributed Datasets}{chapter.3}% 31
\BOOKMARK [2][-]{subsection.3.4.1}{What is an RDD}{section.3.4}% 32
\BOOKMARK [2][-]{subsection.3.4.2}{RDD abstraction and interfaces}{section.3.4}% 33
\BOOKMARK [2][-]{subsection.3.4.3}{RDD examples}{section.3.4}% 34
\BOOKMARK [2][-]{subsection.3.4.4}{RDD dependecy types}{section.3.4}% 35
\BOOKMARK [2][-]{subsection.3.4.5}{Operations on RDDs: Transformations and Actions}{section.3.4}% 36
\BOOKMARK [1][-]{section.3.5}{Spark Word Count}{chapter.3}% 37
\BOOKMARK [0][-]{chapter.4}{Cluster Schedulers}{}% 38
\BOOKMARK [1][-]{section.4.1}{Cluster Scheduling Principles}{chapter.4}% 39
\BOOKMARK [1][-]{section.4.2}{Taxonomy of scheduling design issues}{chapter.4}% 40
\BOOKMARK [1][-]{section.4.3}{Schedulers Architectures}{chapter.4}% 41
\BOOKMARK [1][-]{section.4.4}{YARN}{chapter.4}% 42
\BOOKMARK [2][-]{subsection.4.4.1}{Previous limitations and improvements}{section.4.4}% 43
\BOOKMARK [2][-]{subsection.4.4.2}{Architecture and Core Components}{section.4.4}% 44
\BOOKMARK [2][-]{subsection.4.4.3}{Fault tolerance}{section.4.4}% 45
\BOOKMARK [1][-]{section.4.5}{MESOS}{chapter.4}% 46
\BOOKMARK [2][-]{subsection.4.5.1}{Introduction and Motivations}{section.4.5}% 47
\BOOKMARK [2][-]{subsection.4.5.2}{Architecture}{section.4.5}% 48
\BOOKMARK [2][-]{subsection.4.5.3}{Behaviour}{section.4.5}% 49
\BOOKMARK [1][-]{section.4.6}{BORG}{chapter.4}% 50
\BOOKMARK [2][-]{subsection.4.6.1}{Introduction}{section.4.6}% 51
\BOOKMARK [2][-]{subsection.4.6.2}{User Perspective}{section.4.6}% 52
\BOOKMARK [2][-]{subsection.4.6.3}{Architecture}{section.4.6}% 53
\BOOKMARK [2][-]{subsection.4.6.4}{Behaviour}{section.4.6}% 54
\BOOKMARK [2][-]{subsection.4.6.5}{Lesson Learned}{section.4.6}% 55
\BOOKMARK [0][-]{chapter.5}{SparkSQL}{}% 56
\BOOKMARK [1][-]{section.5.1}{Relational Algebra}{chapter.5}% 57
\BOOKMARK [2][-]{subsection.5.1.1}{Operators}{section.5.1}% 58
\BOOKMARK [2][-]{subsection.5.1.2}{Operators and MapReduce}{section.5.1}% 59
\BOOKMARK [1][-]{section.5.2}{DataSource and DataFrame API}{chapter.5}% 60
\BOOKMARK [1][-]{section.5.3}{SparkSQL Architecture}{chapter.5}% 61
\BOOKMARK [0][-]{chapter.6}{Distributed Storage Systems}{}% 62
\BOOKMARK [1][-]{section.6.1}{The CAP Theorem}{chapter.6}% 63
\BOOKMARK [1][-]{section.6.2}{Amazon Dynamo}{chapter.6}% 64
\BOOKMARK [2][-]{subsection.6.2.1}{Overview}{section.6.2}% 65
\BOOKMARK [2][-]{subsection.6.2.2}{Data partitioning and consistent hashing}{section.6.2}% 66
\BOOKMARK [2][-]{subsection.6.2.3}{Data versioning with Vector Clocks}{section.6.2}% 67
\BOOKMARK [2][-]{subsection.6.2.4}{Handling failures with quorums}{section.6.2}% 68
\BOOKMARK [2][-]{subsection.6.2.5}{Anti-entropy replica synchronization}{section.6.2}% 69
\BOOKMARK [2][-]{subsection.6.2.6}{Gossip membership management}{section.6.2}% 70
\BOOKMARK [1][-]{section.6.3}{Apache HBase}{chapter.6}% 71
\BOOKMARK [2][-]{subsection.6.3.1}{From RDBMS to NOSQL}{section.6.3}% 72
\BOOKMARK [2][-]{subsection.6.3.2}{Table, Rows, Columns and Cells}{section.6.3}% 73
\BOOKMARK [2][-]{subsection.6.3.3}{Automatic Sharding}{section.6.3}% 74
\BOOKMARK [2][-]{subsection.6.3.4}{Storage API}{section.6.3}% 75
\BOOKMARK [2][-]{subsection.6.3.5}{HBase Implementation}{section.6.3}% 76
\BOOKMARK [2][-]{subsection.6.3.6}{Architecture}{section.6.3}% 77
\BOOKMARK [2][-]{subsection.6.3.7}{Key Design}{section.6.3}% 78
\BOOKMARK [1][-]{section.6.4}{Apache Cassandra}{chapter.6}% 79
\BOOKMARK [2][-]{subsection.6.4.1}{Overview}{section.6.4}% 80
\BOOKMARK [2][-]{subsection.6.4.2}{Data Partitioning}{section.6.4}% 81
\BOOKMARK [2][-]{subsection.6.4.3}{Data Replication}{section.6.4}% 82
\BOOKMARK [2][-]{subsection.6.4.4}{Data Model}{section.6.4}% 83
\BOOKMARK [2][-]{subsection.6.4.5}{Read/Write Operations}{section.6.4}% 84
\BOOKMARK [2][-]{subsection.6.4.6}{Consistency}{section.6.4}% 85
\BOOKMARK [0][-]{chapter.7}{Coordinating Distributed Systems}{}% 86
\BOOKMARK [1][-]{section.7.1}{Two-phase commit}{chapter.7}% 87
\BOOKMARK [1][-]{section.7.2}{Paxos}{chapter.7}% 88
\BOOKMARK [2][-]{subsection.7.2.1}{A simplified Paxos round}{section.7.2}% 89
\BOOKMARK [1][-]{section.7.3}{Raft}{chapter.7}% 90
\BOOKMARK [2][-]{subsection.7.3.1}{Overview}{section.7.3}% 91
\BOOKMARK [2][-]{subsection.7.3.2}{Elections}{section.7.3}% 92
\BOOKMARK [2][-]{subsection.7.3.3}{Operation}{section.7.3}% 93
\BOOKMARK [2][-]{subsection.7.3.4}{Failures Handling}{section.7.3}% 94
\BOOKMARK [1][-]{section.7.4}{Zoe and ZooKeeper}{chapter.7}% 95
\BOOKMARK [2][-]{subsection.7.4.1}{Overview}{section.7.4}% 96
\BOOKMARK [2][-]{subsection.7.4.2}{Architecture}{section.7.4}% 97
\BOOKMARK [2][-]{subsection.7.4.3}{Implementation}{section.7.4}% 98
